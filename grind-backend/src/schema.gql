# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Board {
  _id: ID!

  """Created At"""
  createdAt: DateTime!

  """Created By"""
  createdBy: User

  """Board Description"""
  description: String

  """Board Scheme"""
  scheme: Scheme

  """Board Title"""
  title: String!

  """Updated At"""
  updatedAt: DateTime!

  """Updated By"""
  updatedBy: User!
}

type Community {
  _id: ID!

  """Created At"""
  createdAt: DateTime!

  """Community Creator"""
  createdBy: User!

  """Community Description"""
  description: String!

  """Community Errands"""
  errands: [Errand!]!

  """Community Members"""
  members: [User!]!

  """Community Title"""
  title: String!

  """Updated At"""
  updatedAt: DateTime!

  """Updated By"""
  updatedBy: User!
}

input CreateBoardInput {
  """Created By"""
  createdBy: String

  """Board Description"""
  description: String

  """Board Scheme"""
  scheme: String

  """Board Title"""
  title: String!

  """Updated By"""
  updatedBy: String
}

input CreateCommunityInput {
  """Community Creator"""
  createdBy: String!

  """Community Description"""
  description: String!

  """Community Title"""
  title: String!

  """Updated By"""
  updatedBy: String
}

input CreateDiscussionInput {
  """Discusion Body"""
  content: String!

  """Discusion By"""
  createdBy: String

  """Discusion Errand"""
  errand: String!

  """Updated By"""
  updatedBy: String
}

input CreateErrandInput {
  """Assigned To"""
  assignee: String

  """Errand Category"""
  category: ErrandCategory

  """Created By"""
  createdBy: String

  """Errand Description"""
  description: String

  """End Date"""
  endDate: DateTime

  """Errand Label | Status"""
  label: String

  """Errand Members"""
  members: [String!]

  """Errand Milestone"""
  milestones: [String!]

  """Errand Poster"""
  poster: String

  """Errand Priority"""
  priority: String

  """Assigned To"""
  reporter: String

  """Errand Stamps | Tags"""
  stamps: [String!]

  """Start Date"""
  startDate: DateTime

  """Errand Title"""
  title: String

  """Updated By"""
  updatedBy: String
}

input CreateLabelInput {
  """Label category"""
  category: String!

  """Created By"""
  createdBy: String

  """Label title"""
  title: String!

  """Updated By"""
  updatedBy: String
}

input CreateMilestoneInput {
  """Assigned to"""
  assignee: String

  """Status"""
  complete: Boolean

  """Created By"""
  createdBy: String

  """Milestone Description"""
  description: String

  """Milestone Errand"""
  errand: String!

  """Milestone Title"""
  title: String

  """Updated By"""
  updatedBy: String
}

input CreatePosterFlowInput {
  """Example field (placeholder)"""
  exampleField: Int!
}

input CreatePosterInput {
  """Assigned To"""
  assignee: String

  """Poster Board"""
  board: String

  """Poster category"""
  category: PosterCategory

  """Poster Communities"""
  communities: [String!]

  """Created By"""
  createdBy: String

  """Poster description"""
  description: String

  """Poster Members"""
  members: [String!]

  """Poster label"""
  stamps: String

  """Poster status"""
  status: String

  """Poster Title"""
  title: String

  """Updated By"""
  updatedBy: String
}

input CreateSchemeInput {
  """Assigned ti"""
  assignee: String

  """Created By"""
  createdBy: String

  """Scheme Description"""
  description: String

  """End Date"""
  endDate: DateTime

  """Scheme Members"""
  members: [String!]

  """Start Date"""
  startDate: DateTime

  """Scheme Title"""
  title: String!

  """Updated By"""
  updatedBy: String
}

input CreateStampInput {
  """Stamp category"""
  category: String!

  """Created By"""
  createdBy: String

  """Stamp title"""
  title: String!

  """Updated By"""
  updatedBy: String
}

input CreateUserInput {
  address: String!
  completeness: Float!
  createdBy: String!
  email: String!
  firstName: String!
  lastLogin: DateTime!
  lastName: String!
  lastPasswordReset: DateTime!
  middleName: String!
  name: String!
  password: String!
  phone: String!
  pin: String!
  requirePasswordChange: Boolean!
  requirePinChange: Boolean!
  resetPasswordKey: String!
  resetPinKey: String!
  roles: [UserRole!]!
  status: String!
  updatedBy: String!
  userName: String!
}

input CreateWorkFlowInput {
  """Example field (placeholder)"""
  exampleField: Int!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Discussion {
  _id: ID!

  """Discusion Body"""
  content: String!

  """Created At"""
  createdAt: DateTime!

  """Discusion By"""
  createdBy: User

  """Discusion Errand"""
  errand: Errand!

  """Updated At"""
  updatedAt: DateTime!
}

type Errand {
  _id: ID!

  """Assigned To"""
  assignee: User

  """Errand category"""
  category: ErrandCategory

  """Created At"""
  createdAt: DateTime!

  """Created By"""
  createdBy: User

  """Errand description"""
  description: String

  """End Date"""
  endDate: DateTime

  """Errand label | Status"""
  label: Label

  """Errand Members"""
  members: [User!]

  """Errand Poster"""
  poster: Poster

  """Errand priority"""
  priority: String

  """Errand Progress"""
  progress: Int

  """Reported By"""
  reporter: User

  """Errand stamps"""
  stamps: [Stamp!]

  """Start Date"""
  startDate: DateTime

  """Errand Title"""
  title: String

  """Updated At"""
  updatedAt: DateTime!

  """Updated By"""
  updatedBy: User
}

enum ErrandCategory {
  ENGAGEMENT
  MESSAGE
  PROJECT
  TICKET
  TODO
}

type Label {
  _id: ID!

  """Label category"""
  category: LabelCategory

  """Created At"""
  createdAt: DateTime

  """Created By"""
  createdBy: User

  """Label title"""
  title: String!

  """Updated At"""
  updatedAt: DateTime

  """Updated By"""
  updatedBy: User
}

enum LabelCategory {
  TICKET
}

type Media {
  _id: ID!

  """Created At"""
  createdAt: DateTime

  """Actor"""
  createdBy: User

  """Media description"""
  description: String

  """Media destination"""
  destination: String

  """Media encoding"""
  encoding: String

  """Media filename"""
  filename: String

  """Media mimetype"""
  mimetype: String

  """Media originalname"""
  originalname: String

  """Media path"""
  path: String

  """Media size"""
  size: String

  """Media target"""
  target: MediaTarget

  """Media Target ID"""
  targetId: String

  """Updated At"""
  updatedAt: DateTime
}

enum MediaTarget {
  ERRAND
}

type Milestone {
  _id: ID!

  """Assigned to"""
  assignee: User

  """Milestone progress"""
  complete: Boolean

  """Created At"""
  createdAt: DateTime

  """Created By"""
  createdBy: User

  """Milestone Description"""
  description: String

  """Milestone Errand"""
  errand: Errand

  """Milestone Title"""
  title: String

  """Updated At"""
  updatedAt: DateTime

  """Updated By"""
  updatedBy: User
}

type Mutation {
  createBoard(createBoardInput: CreateBoardInput!): Board!
  createCommunity(createCommunityInput: CreateCommunityInput!): Community!
  createDiscussion(createDiscussionInput: CreateDiscussionInput!): Discussion!
  createErrand(createErrandInput: CreateErrandInput!): Errand!
  createLabel(createLabelInput: CreateLabelInput!): Label!
  createMilestone(createMilestoneInput: CreateMilestoneInput!): Milestone!
  createPoster(createPosterInput: CreatePosterInput!): Poster!
  createPosterFlow(createPosterFlowInput: CreatePosterFlowInput!): PosterFlow!
  createScheme(createSchemeInput: CreateSchemeInput!): Scheme!
  createStamp(createStampInput: CreateStampInput!): Stamp!
  createUser(createUserInput: CreateUserInput!): User!
  createWorkFlow(createWorkFlowInput: CreateWorkFlowInput!): WorkFlow!
  removeBoard(id: Int!): Board!
  removeCommunity(id: Int!): Community!
  removeDiscussion(id: String!): Discussion!
  removeErrand(id: Int!): Errand!
  removeLabel(id: Int!): Label!
  removeMilestone(id: String!): Milestone!
  removePoster(id: Int!): Poster!
  removePosterFlow(id: Int!): PosterFlow!
  removeScheme(id: String!): Scheme!
  removeStamp(id: Int!): Stamp!
  removeUser(id: Int!): User!
  removeWorkFlow(id: Int!): WorkFlow!
  updateBoard(updateBoardInput: UpdateBoardInput!): Board!
  updateCommunity(updateCommunityInput: UpdateCommunityInput!): Community!
  updateDiscussion(updateDiscussionInput: UpdateDiscussionInput!): Discussion!
  updateErrand(updateErrandInput: UpdateErrandInput!): Errand!
  updateLabel(updateLabelInput: UpdateLabelInput!): Label!
  updateMilestone(updateMilestoneInput: UpdateMilestoneInput!): Milestone!
  updatePoster(updatePosterInput: UpdatePosterInput!): Poster!
  updatePosterFlow(updatePosterFlowInput: UpdatePosterFlowInput!): PosterFlow!
  updateScheme(updateSchemeInput: UpdateSchemeInput!): Scheme!
  updateStamp(updateStampInput: UpdateStampInput!): Stamp!
  updateUser(updateUserInput: UpdateUserInput!): User!
  updateWorkFlow(updateWorkFlowInput: UpdateWorkFlowInput!): WorkFlow!
}

type Occurrence {
  _id: ID!

  """Actor"""
  actor: User

  """Created At"""
  createdAt: DateTime!

  """Poster description"""
  description: String

  """Poster category"""
  target: OccurreneTarget

  """Poster Title"""
  targetId: String

  """Updated At"""
  updatedAt: DateTime!
}

enum OccurreneTarget {
  ERRAND
}

type Poster {
  _id: ID!

  """Assigned To"""
  assignee: User

  """Poster Board"""
  board: Board

  """Poster category"""
  category: PosterCategory

  """Created At"""
  createdAt: DateTime

  """Created By"""
  createdBy: User

  """Poster description"""
  description: String
  errands: [Errand]

  """Poster Members"""
  members: [User!]

  """Poster label"""
  stamps: [Stamp!]

  """Poster status"""
  status: String

  """Poster Title"""
  title: String

  """Updated At"""
  updatedAt: DateTime

  """Updated By"""
  updatedBy: User

  """Poster Work Flow"""
  workflow: [PosterFlow!]
}

enum PosterCategory {
  ENGAGEMENT
  LISTING
  MESAGE
  TODO
}

type PosterFlow {
  """Example field (placeholder)"""
  exampleField: Int!
}

type Query {
  board(id: Int!): Board!
  boards: [Board!]!
  communities: [Community!]!
  community(id: Int!): Community!
  discussion(id: String!): Discussion!
  discussions(id: String): [Discussion!]!
  errand(id: String!): Errand!
  errands(filters: CreateErrandInput!): [Errand!]!
  label(id: Int!): Label!
  labels: [Label!]!
  medias(target: String!, targetId: String!): [Media!]!
  milestone(id: Int!): Milestone!
  milestones(errand: String!): [Milestone!]!
  occurrences(target: String!, targetId: String!): [Occurrence!]!
  poster(id: Int!): Poster!
  posterFlow(id: Int!): PosterFlow!
  posters(board: String!): [Poster!]!
  query(category: String!): [Label!]!
  scheme(id: String!): Scheme!
  schemes: [Scheme!]!
  stamp(id: Int!): Stamp!
  stamps: [Stamp!]!
  user(id: Int!): User!
  users: [User!]!
  workFlow(id: Int!): WorkFlow!
}

type Scheme {
  _id: ID!

  """Assigned to"""
  assignee: User
  boards: [Board]

  """Created At"""
  createdAt: DateTime!

  """Created By"""
  createdBy: User

  """Scheme Description"""
  description: String

  """End Date"""
  endDate: DateTime

  """Scheme Members"""
  members: [User!]

  """Start Date"""
  startDate: DateTime

  """Scheme Title"""
  title: String!

  """Updated At"""
  updatedAt: DateTime!

  """Updated By"""
  updatedBy: User
}

type Stamp {
  _id: ID!

  """Stamp category"""
  category: StampCategory

  """Created At"""
  createdAt: DateTime

  """Created By"""
  createdBy: User

  """Stamp title"""
  title: String!

  """Updated At"""
  updatedAt: DateTime

  """Updated By"""
  updatedBy: User
}

enum StampCategory {
  PROJECT
  TICKET
}

input UpdateBoardInput {
  """Created By"""
  createdBy: String

  """Board Description"""
  description: String
  id: String!

  """Board Scheme"""
  scheme: String

  """Board Title"""
  title: String

  """Updated By"""
  updatedBy: String
}

input UpdateCommunityInput {
  """Community Creator"""
  createdBy: String

  """Community Description"""
  description: String
  id: String!

  """Community Title"""
  title: String

  """Updated By"""
  updatedBy: String
}

input UpdateDiscussionInput {
  """Discusion Body"""
  content: String

  """Discusion By"""
  createdBy: String

  """Discusion Errand"""
  errand: String
  id: String!

  """Updated By"""
  updatedBy: String
}

input UpdateErrandInput {
  """Assigned To"""
  assignee: String

  """Errand Category"""
  category: ErrandCategory

  """Created By"""
  createdBy: String

  """Errand Description"""
  description: String

  """End Date"""
  endDate: DateTime
  id: String!

  """Errand Label | Status"""
  label: String

  """Errand Members"""
  members: [String!]

  """Errand Milestone"""
  milestones: [String!]

  """Errand Poster"""
  poster: String

  """Errand Priority"""
  priority: String

  """Assigned To"""
  reporter: String

  """Errand Stamps | Tags"""
  stamps: [String!]

  """Start Date"""
  startDate: DateTime

  """Errand Title"""
  title: String

  """Updated By"""
  updatedBy: String
}

input UpdateLabelInput {
  """Label category"""
  category: String

  """Created By"""
  createdBy: String
  id: String!

  """Label title"""
  title: String

  """Updated By"""
  updatedBy: String
}

input UpdateMilestoneInput {
  """Assigned to"""
  assignee: String

  """Status"""
  complete: Boolean

  """Created By"""
  createdBy: String

  """Milestone Description"""
  description: String

  """Milestone Errand"""
  errand: String
  id: String!

  """Milestone Title"""
  title: String

  """Updated By"""
  updatedBy: String
}

input UpdatePosterFlowInput {
  """Example field (placeholder)"""
  exampleField: Int
  id: Int!
}

input UpdatePosterInput {
  """Assigned To"""
  assignee: String

  """Poster Board"""
  board: String

  """Poster category"""
  category: PosterCategory

  """Poster Communities"""
  communities: [String!]

  """Created By"""
  createdBy: String

  """Poster description"""
  description: String
  id: String!

  """Poster Members"""
  members: [String!]

  """Poster label"""
  stamps: String

  """Poster status"""
  status: String

  """Poster Title"""
  title: String

  """Updated By"""
  updatedBy: String
}

input UpdateSchemeInput {
  """Assigned ti"""
  assignee: String

  """Created By"""
  createdBy: String

  """Scheme Description"""
  description: String

  """End Date"""
  endDate: DateTime
  id: String!

  """Scheme Members"""
  members: [String!]

  """Start Date"""
  startDate: DateTime

  """Scheme Title"""
  title: String

  """Updated By"""
  updatedBy: String
}

input UpdateStampInput {
  """Stamp category"""
  category: String

  """Created By"""
  createdBy: String
  id: String!

  """Stamp title"""
  title: String

  """Updated By"""
  updatedBy: String
}

input UpdateUserInput {
  address: String
  completeness: Float
  createdBy: String
  email: String
  firstName: String
  id: String!
  lastLogin: DateTime
  lastName: String
  lastPasswordReset: DateTime
  middleName: String
  name: String
  password: String
  phone: String
  pin: String
  requirePasswordChange: Boolean
  requirePinChange: Boolean
  resetPasswordKey: String
  resetPinKey: String
  roles: [UserRole!]
  status: String
  updatedBy: String
  userName: String
}

input UpdateWorkFlowInput {
  """Example field (placeholder)"""
  exampleField: Int
  id: Int!
}

type User {
  _id: ID!
  completeness: String

  """Created At"""
  createdAt: DateTime!
  createdBy: String
  email: String
  firstName: String
  hashed_password: String
  is_active: String
  is_superuser: String
  lastLogin: String
  lastName: String
  lastPasswordReset: DateTime!
  middleName: String
  name: String
  password: String
  phone: String
  pin: String
  requirePasswordChange: String
  requirePinChange: String
  resetPasswordKey: String
  resetPinKey: String
  roles: [UserRole!]
  status: String

  """Updated At"""
  updatedAt: DateTime!
  updatedBy: String
  userName: String
}

enum UserRole {
  ADMIN
  SU_ADMIN
  USER
}

type WorkFlow {
  _id: ID!

  """Created At"""
  createdAt: DateTime

  """Created By"""
  createdBy: User

  """WorkFlow description"""
  description: String

  """WorkFlow status"""
  status: String

  """WorkFlow category"""
  target: WorkFlowTarget

  """WorkFlow Title"""
  title: String

  """Updated At"""
  updatedAt: DateTime

  """Updated By"""
  updatedBy: User
}

enum WorkFlowTarget {
  POSTER
  TICKET
  TODO
}